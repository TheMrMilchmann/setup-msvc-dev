name: CI

on:
  push:
    branches-ignore:
      - 'v*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches-ignore:
      - 'v*'
    paths-ignore:
      - '**.md'


env:
  WORKSPACE_ARCHIVE: workspace.tar
  WORKSPACE_ARTIFACT: build-results


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: "yarn"

      - name: Yarn build
        run: yarn build

      - name: Tar files
        run: tar -cvf ${{ env.WORKSPACE_ARCHIVE }} .

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.WORKSPACE_ARTIFACT }}
          path: ${{ env.WORKSPACE_ARCHIVE }}
          retention-days: 1


  test-vcvarsall-invocation:
    name: Test Developer Command Prompt Setup (${{ matrix.arch }}) - ${{ matrix.os }}
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]
        arch: [x64, x32, x86_arm, x86_arm64]
    steps:
      - name: Checkout
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.WORKSPACE_ARTIFACT }}
          path: .

      - name: Untar
        run: |
          tar -xvf ${{ env.WORKSPACE_ARCHIVE }}
          rm ${{ env.WORKSPACE_ARCHIVE }}

      - name: setup-msvc-dev
        uses: ./
        with:
          arch: ${{ matrix.arch }}

      - name: 'Verify cl.exe'
        shell: cmd
        run: |
          where cl.exe
          IF ERRORLEVEL 1 exit ERRORLEVEL


  test-path-exports:
    name: Test exporting tool paths - ${{ matrix.os }}
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]
    steps:
      - name: Checkout
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.WORKSPACE_ARTIFACT }}
          path: .

      - name: Untar
        run: |
          tar -xvf ${{ env.WORKSPACE_ARCHIVE }}
          rm ${{ env.WORKSPACE_ARCHIVE }}

      - name: setup-msvc-dev
        uses: ./
        with:
          export-path-to-vcvarsall: PATH_TO_VCVARSALL
          export-path-to-vs: PATH_TO_VS

      - name: 'Verify path to vcvarsall.bat'
        shell: cmd
        run: IF NOT EXIST "%PATH_TO_VCVARSALL%\vcvarsall.bat" exit 1

      - name: 'Verify path to VS'
        shell: cmd
        run: IF NOT EXIST "%PATH_TO_VS%" exit 1


  # So, what's happening here?
  #
  # Basically, restoring the workspace state between jobs is incredibly annoying.
  # We can get reasonable support by using the upload-/download-artifact
  # actions, but they suffer from a severe limitation:
  # GH Actions has a storage limit and the minimum retention is 24 hours...
  #
  # Since the storage quota is limited, we have to make sure that the artifact
  # is removed. Unfortunately, there is no official way to do this, so we resort
  # to a third party action for now.
  #
  # See also: https://github.com/actions/upload-artifact/issues/290
  cleanup:
    name: Cleanup
    if: ${{ always() }}
    needs: [test-vcvarsall-invocation, test-path-exports]
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup
        uses: GeekyEggo/delete-artifact@54ab544f12cdb7b71613a16a2b5a37a9ade990af
        with:
          name: ${{ env.workspace_artifact }}